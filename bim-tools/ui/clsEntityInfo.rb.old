#       clsEntityInfo.rb
#       
#       Copyright (C) 2012 Jan Brouwer <jan@brewsky.nl>
#       
#       This program is free software: you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation, either version 3 of the License, or
#       (at your option) any later version.
#       
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#       
#       You should have received a copy of the GNU General Public License
#       along with this program.  If not, see <http://www.gnu.org/licenses/>.

require 'bim-tools/ui/clsDialogSection.rb'

class ClsEntityInfo < ClsDialogSection
  def initialize(dialog)
    @dialog = dialog
    @project = dialog.project
    @status = true
    @name = "EntityInfo"
    @width = "-"
    @offset = "-"
    @volume = "-"
    @guid = "-"
    @html_content = html_content
    action
  end

  #action to be started on webdialog form submit
  def action
    require 'bim-tools/tools/planar_update.rb'
    @dialog.webdialog.add_action_callback("EntityInfo") {|dialog, params|
      width = "-"
      offset = "-"

      #split string into separate values
      a_form_data = split_string(params)
      a_form_data.each do |pair|
        if pair[0] == "width"
          if pair[1] == "..."
            width = 0
          else
            width = pair[1].to_l
          end
        elsif pair[0] == "offset"
          if pair[1] == "..."
            offset = 0
          else
            offset = pair[1].to_l
          end
        end
      end
      selection = Sketchup.active_model.selection
      planar_update(@project, selection, width, offset)
    }
  end
  def html_content
    
    return "
<h2>Selected entity</h2>
<form id='EntityInfo' name='EntityInfo' action='skp:EntityInfo@true'>
  <label for='width'>Width:</label>
  <input name='width' type='text' id='width' value='" + @width + "' />
  <br />
  <label for='offset'>Offset:</label>
  <input name='offset' type='text' id='offset' value='" + @offset + "' />
  <hr />
  <label for='type'>Element type:</label>
  <select name='type' id='type'>
    <option selected='selected'>...</option>
    <option >Wall</option>
    <option>Floor</option>
    <option>Roof</option>
  </select>
  <br />
  <label for='name'>Name:</label>
  <input name='name' type='text' id='name' value='default' />
  <br />
  <label for='description'>Description:</label>
  <input name='description' type='text' id='description' value='default' />
  <hr />" + html_properties_fixed + "
  <input type='submit' name='submit' id='submit' value='Update selected entities' />
</form>
    "
  end


  # update webdialog based on selected entities
  def update(entities)
    if entities.length == 0
      @width = "-"
      @offset = "-"
      @volume = "-"
      @guid = "-"
    end
    # pas de waarde voor breedte aan!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    # zoek in selectie of het een bt-object is, als dat zo is, pas de breedte daar op aan
    bt_entities = @project.library.geometry_array_remove_non_bt_entities(@project, entities)

    if bt_entities[0] != nil
      if bt_entities.length == 1
        @volume = bt_entities[0].volume? + " Millimeters Â³"
        @guid = bt_entities[0].guid?
      end
      width_total = 0
      offset_total = 0
      bt_entities.each do |entity|
        width_total = width_total + entity.width
        offset_total = offset_total + entity.offset
      end
      if (width_total / bt_entities.length) == bt_entities[0].width
        @width = bt_entities[0].width.to_s
      else
        @width = "..."
      end
      if (offset_total / bt_entities.length) == bt_entities[0].offset
        @offset = bt_entities[0].offset.to_s
      else
        @offset = "..."
      end
    end
    @html_content = html_content
  end
  
  def html_properties_fixed
    sel = @dialog.selection
    html = ""
    sel.common_properties.each do |key, value|
      html = html + "
  <br />
  <label for='" + key + "'>" + key + ":</label>
  <input name='" + key + "' type='text' id='" + key + "' value='" + value + "' disabled='disabled' />
      "
    end
    return html
  end
end
